version: '3'
services:
  pgadmin:
    image: dpage/pgadmin4:7.3
    environment:
      - MASTER_PASSWORD_REQUIRED=False
      - PGADMIN_DEFAULT_EMAIL=admin@dev.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_LISTEN_PORT=8081
    ports:
      - "8081:8081"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - ./pg_admin_data:/var/lib/pgadmin
    depends_on:
      - db
  db:
    image: postgres:15.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
    healthcheck:
      test: pg_isready --username=$POSTGRES_USER --dbname=$POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
  server:
    container_name: "mpk_server"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src/
      - ./migrations:/app/migrations
    depends_on:
      - db
    environment:
      - TEMPLATING_PATH_TO_TEMPLATES=/app/src/templates/
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_USER=$POSTGRES_USER
      - DB_NAME=$POSTGRES_DB
      - DB_HOST=db
      - DB_PORT=5432
    entrypoint: [ "/bin/sh", "-c", "alembic upgrade head && sanic src.server.app --host 0.0.0.0 --port 8080 --dev " ]
  test:
    container_name: "test_mpk_server"
    build:
      context: .
      dockerfile: Dockerfile

    volumes:
      - ./src:/app/src/
      - ./pytest.ini:/app/pytest.ini
      - ./.coveragerc:/app/.coveragerc
    depends_on:
      - db
    environment:
      - TEMPLATING_PATH_TO_TEMPLATES=/app/src/templates/
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_USER=$POSTGRES_USER
      - DB_NAME=$POSTGRES_DB
      - DB_HOST=db
      - DB_PORT=5432
    entrypoint: [ "/bin/sh", "-c", "pytest" ]
